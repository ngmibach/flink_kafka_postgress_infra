services:
  master:
    hostname: master
    image: "rancher/k3s:${K3S_VERSION:-latest}"
    command: server
    tmpfs:
      - /run
      - /var/run
    ulimits:
      nproc: 65535
      nofile:
        soft: 65535
        hard: 65535
    privileged: true
    restart: always
    environment:
      - K3S_TOKEN=${K3S_TOKEN:?err}
      - K3S_KUBECONFIG_OUTPUT=/output/kubeconfig.yaml
      - K3S_KUBECONFIG_MODE=777
    volumes:
      - ./config:/output
      - ./k8s_yaml:/workspace
      - ./registries.yaml:/etc/rancher/k3s/registries.yaml
    ports:
      - 6443:6443
      - 30000:30000
      - 30001:30001
      - 30002:30002
      - 30003:30003
    healthcheck:
      test: ["CMD-SHELL", "kubectl get --raw='/readyz?verbose' || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      k3s_net:
        ipv4_address: 172.19.0.2

  registry:
    image: localhost:5000/library/registry:latest
    build:
      context: build/registry
    restart: always
    volumes:
      - /workspace/registry:/var/lib/registry
    ports:
      - 5000:5000
    healthcheck:
      test: ["CMD-SHELL", "nc -z localhost 5000"]
      interval: 5s
      timeout: 3s
      retries: 10
    networks:
      k3s_net:
        ipv4_address: 172.19.0.3

  git-repo:
    image: localhost:5000/library/git-repo:latest
    build:
      context: build/git-repo
    restart: always
    volumes:
      - ./repo_list.txt:/repo_list.txt
    ports:
      - 3000:3000
    healthcheck:
      test: ["CMD-SHELL", "/repo_init.sh > /log.txt 2>&1"]
      interval: 5s
      timeout: 3s
      retries: 10
    networks:
      k3s_net:
        ipv4_address: 172.19.0.4

  apply_yaml:
    image: docker:cli
    depends_on:
      master:
        condition: service_healthy
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ${PWD}:${PWD}
    working_dir: ${PWD}
    command: sh -c "while true; do docker compose exec master kubectl apply -f /workspace/*.yaml; sleep 5; clear; done"
    restart: always
    networks:
      k3s_net:
        ipv4_address: 172.19.0.5

  worker-1:
    image: "rancher/k3s:${K3S_VERSION:-latest}"
    hostname: worker-1
    depends_on:
      master:
        condition: service_healthy
    tmpfs:
      - /run
      - /var/run
    ulimits:
      nproc: 65535
      nofile:
        soft: 65535
        hard: 65535
    privileged: true
    restart: always
    environment:
      - K3S_URL=https://master:6443
      - K3S_TOKEN=${K3S_TOKEN:?err}
    volumes:
      - ./registries.yaml:/etc/rancher/k3s/registries.yaml
    networks:
      k3s_net:
        ipv4_address: 172.19.0.6

  worker-2:
    image: "rancher/k3s:${K3S_VERSION:-latest}"
    hostname: worker-2
    depends_on:
      master:
        condition: service_healthy
    tmpfs:
      - /run
      - /var/run
    ulimits:
      nproc: 65535
      nofile:
        soft: 65535
        hard: 65535
    privileged: true
    restart: always
    environment:
      - K3S_URL=https://master:6443
      - K3S_TOKEN=${K3S_TOKEN:?err}
    volumes:
      - ./registries.yaml:/etc/rancher/k3s/registries.yaml
    networks:
      k3s_net:
        ipv4_address: 172.19.0.7

  worker-3:
    image: "rancher/k3s:${K3S_VERSION:-latest}"
    hostname: worker-3
    depends_on:
      master:
        condition: service_healthy
    tmpfs:
      - /run
      - /var/run
    ulimits:
      nproc: 65535
      nofile:
        soft: 65535
        hard: 65535
    privileged: true
    restart: always
    environment:
      - K3S_URL=https://master:6443
      - K3S_TOKEN=${K3S_TOKEN:?err}
    volumes:
      - ./registries.yaml:/etc/rancher/k3s/registries.yaml
    networks:
      k3s_net:
        ipv4_address: 172.19.0.8

networks:
  k3s_net:
    driver: bridge
    ipam:
      config:
        - subnet: 172.19.0.0/16